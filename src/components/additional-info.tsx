import { useState } from 'react'
import { motion } from 'motion/react'
import { Button } from "./ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "./ui/card"
import { Separator } from "./ui/separator"
import { Download, FileText, Home, Building2 } from 'lucide-react'

interface Room {
  id: string
  name: string
  type: string
  usage: string
  shape: string
  ceilingHeight: number
  area: number
  width: number
  length: number
  position: number
  parts: any[]
  additionalInfo: string
}

interface ProjectData {
  name: string
  address: string
  type: 'apartment' | 'house'
}

interface AdditionalInfoProps {
  rooms: Room[]
  projectData: ProjectData
  onBack: () => void
}

export function AdditionalInfo({ rooms, projectData, onBack }: AdditionalInfoProps) {
  const totalArea = rooms.reduce((sum, room) => sum + room.area, 0)
  const currentDate = new Date().toLocaleDateString('en-DE', {
    year: 'numeric',
    month: '2-digit',
    day: '2-digit'
  })
  
  const reportNumber = `GRX-${new Date().getFullYear()}-${Math.random().toString(36).substr(2, 6).toUpperCase()}`

  const handleDownloadReport = () => {
    // Generate comprehensive report
    const reportContent = `
GREENOX PROPERTY MEASUREMENT REPORT
=====================================

Report Number: ${reportNumber}
Date: ${currentDate}

PROJECT INFORMATION:
Project Name: ${projectData.name}
Property Address: ${projectData.address}
Property Type: ${projectData.type.charAt(0).toUpperCase() + projectData.type.slice(1)}

ROOM MEASUREMENTS:
${rooms.map((room, index) => `
${index + 1}. ${room.name} (${room.type})
   - Dimensions: ${room.width.toFixed(3)} m × ${room.length.toFixed(3)} m
   - Ceiling Height: ${room.ceilingHeight.toFixed(3)} m
   - Area: ${room.area.toFixed(3)} m²
   - Usage: ${room.usage}
   - Shape: ${room.shape}
   - Position: ${room.position}
   ${room.parts.length > 0 ? `   - Parts: ${room.parts.length} room parts included` : ''}
   ${room.additionalInfo ? `   - Notes: ${room.additionalInfo}` : ''}
`).join('')}

SUMMARY:
Total Rooms: ${rooms.length}
Total Area: ${totalArea.toFixed(3)} m²
Average Room Size: ${rooms.length > 0 ? (totalArea / rooms.length).toFixed(3) : '0.000'} m²
Average Ceiling Height: ${rooms.length > 0 ? (rooms.reduce((sum, room) => sum + room.ceilingHeight, 0) / rooms.length).toFixed(3) : '0.000'} m

DIN 277 CALCULATIONS:
${rooms.map(room => `${room.name}: ${room.area.toFixed(3)} m²`).join('\n')}
Total DIN 277 Area: ${totalArea.toFixed(3)} m²

LIVING SPACE ORDINANCE:
${rooms.map(room => {
  const livingSpaceArea = room.ceilingHeight >= 2.3 ? room.area : 
                         room.ceilingHeight >= 2.0 ? room.area * 0.5 : 0
  return `${room.name}: ${livingSpaceArea.toFixed(3)} m² (${room.ceilingHeight >= 2.3 ? 'Full' : room.ceilingHeight >= 2.0 ? 'Reduced' : 'Not counted'})`
}).join('\n')}
Total Living Space: ${rooms.reduce((sum, room) => {
  const livingSpaceArea = room.ceilingHeight >= 2.3 ? room.area : 
                         room.ceilingHeight >= 2.0 ? room.area * 0.5 : 0
  return sum + livingSpaceArea
}, 0).toFixed(3)} m²

Generated by GREENOX Property Measurement System
Report created on ${currentDate}
    `.trim()

    const element = document.createElement('a')
    const file = new Blob([reportContent], { type: 'text/plain' })
    element.href = URL.createObjectURL(file)
    element.download = `${projectData.name}-GREENOX-Report.txt`
    document.body.appendChild(element)
    element.click()
    document.body.removeChild(element)
  }

  const getDIN277Total = () => {
    return rooms.reduce((sum, room) => sum + room.area, 0)
  }

  const getLivingSpaceTotal = () => {
    return rooms.reduce((sum, room) => {
      if (room.ceilingHeight >= 2.3) return sum + room.area
      if (room.ceilingHeight >= 2.0) return sum + (room.area * 0.5)
      return sum
    }, 0)
  }

  return (
    <div className="space-y-8">
      <div>
        <h2 className="text-3xl font-medium mb-2 bg-gradient-to-r from-lime-600 to-green-600 bg-clip-text text-transparent">
          Additional Information
        </h2>
        <p className="text-gray-600">
          Review your complete property measurement report and download the final documentation.
        </p>
      </div>

      <div className="grid lg:grid-cols-2 gap-8">
        {/* Project Summary */}
        <Card className="bg-white/60 backdrop-blur-sm border-white/20 shadow-xl">
          <CardHeader>
            <CardTitle className="flex items-center gap-3">
              <div className="p-2 bg-lime-100 rounded-lg">
                <Building2 className="w-5 h-5 text-green-600" />
              </div>
              Project Summary
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-2 gap-4 text-center">
              <div className="p-4 bg-gradient-to-r from-lime-50 to-green-50 rounded-lg">
                <div className="text-2xl font-bold text-green-600">{rooms.length}</div>
                <div className="text-sm text-green-700">Total Rooms</div>
              </div>
              <div className="p-4 bg-gradient-to-r from-lime-50 to-green-50 rounded-lg">
                <div className="text-2xl font-bold text-green-600">{totalArea.toFixed(1)}</div>
                <div className="text-sm text-green-700">Total Area (m²)</div>
              </div>
            </div>
            
            <Separator />
            
            <div className="space-y-3">
              <div className="flex justify-between">
                <span className="text-gray-600">Project Name</span>
                <span className="font-medium">{projectData.name}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Property Address</span>
                <span className="font-medium">{projectData.address}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Property Type</span>
                <span className="font-medium capitalize">{projectData.type}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Report Number</span>
                <span className="font-mono text-sm">{reportNumber}</span>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Room Overview */}
        <Card className="bg-white/60 backdrop-blur-sm border-white/20 shadow-xl">
          <CardHeader>
            <CardTitle className="flex items-center gap-3">
              <div className="p-2 bg-lime-100 rounded-lg">
                <Home className="w-5 h-5 text-green-600" />
              </div>
              Room Overview
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-3 max-h-64 overflow-y-auto">
              {rooms.map((room, index) => (
                <div key={room.id} className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                  <div>
                    <div className="font-medium">{room.name}</div>
                    <div className="text-sm text-gray-500">
                      {room.width.toFixed(1)} × {room.length.toFixed(1)} m
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="font-bold text-green-600">{room.area.toFixed(3)} m²</div>
                    <div className="text-xs text-gray-500">h: {room.ceilingHeight.toFixed(1)}m</div>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Calculation Standards */}
      <div className="grid md:grid-cols-2 gap-6">
        {/* DIN 277 */}
        <Card className="bg-gradient-to-br from-lime-50 to-green-100 border-lime-200 shadow-xl">
          <CardHeader>
            <CardTitle className="text-green-800">DIN 277 Standard</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-center mb-4">
              <div className="text-3xl font-bold text-green-700">{getDIN277Total().toFixed(3)} m²</div>
              <div className="text-sm text-green-600">Total Gross Floor Area</div>
            </div>
            <div className="space-y-2 text-sm text-green-700">
              {rooms.map(room => (
                <div key={room.id} className="flex justify-between">
                  <span>{room.name}</span>
                  <span>{room.area.toFixed(3)} m²</span>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* Living Space Ordinance */}
        <Card className="bg-gradient-to-br from-blue-50 to-cyan-100 border-blue-200 shadow-xl">
          <CardHeader>
            <CardTitle className="text-blue-800">Living Space Ordinance</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-center mb-4">
              <div className="text-3xl font-bold text-blue-700">{getLivingSpaceTotal().toFixed(3)} m²</div>
              <div className="text-sm text-blue-600">Qualifying Living Space</div>
            </div>
            <div className="space-y-2 text-sm text-blue-700">
              {rooms.map(room => {
                const livingArea = room.ceilingHeight >= 2.3 ? room.area : 
                                  room.ceilingHeight >= 2.0 ? room.area * 0.5 : 0
                const status = room.ceilingHeight >= 2.3 ? 'Full' : 
                              room.ceilingHeight >= 2.0 ? '50%' : 'Not counted'
                return (
                  <div key={room.id} className="flex justify-between items-center">
                    <span>{room.name}</span>
                    <div className="text-right">
                      <div>{livingArea.toFixed(3)} m²</div>
                      <div className="text-xs opacity-75">({status})</div>
                    </div>
                  </div>
                )
              })}
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Download Section */}
      <Card className="bg-gradient-to-r from-lime-500 to-green-600 text-white shadow-2xl">
        <CardHeader>
          <CardTitle className="flex items-center gap-3 text-white">
            <div className="p-2 bg-white/20 rounded-lg">
              <FileText className="w-5 h-5" />
            </div>
            Generate Final Report
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex items-center justify-between">
            <div>
              <p className="text-lime-50 mb-2">
                Your comprehensive property measurement report is ready for download.
              </p>
              <div className="text-sm text-lime-100">
                Includes all room measurements, DIN 277 calculations, and Living Space Ordinance compliance.
              </div>
            </div>
            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
              <Button
                onClick={handleDownloadReport}
                className="bg-white text-green-600 hover:bg-gray-50 px-6 py-3 shadow-lg"
              >
                <Download className="w-5 h-5 mr-2" />
                Download Report
              </Button>
            </motion.div>
          </div>
        </CardContent>
      </Card>

      {/* Navigation */}
      <div className="flex justify-start pt-4">
        <Button 
          onClick={onBack}
          variant="outline"
          className="px-6"
        >
          Back to Customer Data
        </Button>
      </div>
    </div>
  )
}